{"is_source_file": true, "format": "C++", "description": "Unit tests for file monitoring functionalities using Google Test framework, including handling of existing files, non-existent files, symbolic links, and concurrent file operations.", "external_files": ["../src/path_utils.hpp", "<gtest/gtest.h>"], "external_methods": [], "published": [], "classes": [{"name": "FileMonitoringTest", "description": "A test fixture that sets up and tears down the testing environment for file monitoring functionalities."}], "methods": [{"name": "stat_file", "description": "Retrieves file statistics given a file path, asserting the successful retrieval."}, {"name": "SetUp", "description": "Sets up the test environment by creating temporary directories and test files."}, {"name": "TearDown", "description": "Cleans up the test environment by removing created directories and files."}, {"name": "ExistingFileValidation", "description": "Test that verifies if an existing file can be accessed and its type is regular."}, {"name": "NonExistentFileValidation", "description": "Test that verifies that non-existent files should not be accessible."}, {"name": "SymbolicLinkValidation", "description": "Test that verifies the behavior of symbolic links including checking symlink existence and correctness."}, {"name": "ConcurrentFileOperations", "description": "Test that verifies the correctness of concurrent file operations through multiple threads."}], "calls": ["stat", "lstat", "std::filesystem::create_directory", "std::ofstream::operator<<", "std::filesystem::create_symlink", "std::filesystem::remove_all", "thread::join"], "search-terms": ["FileMonitoringTest", "stat_file", "ExistingFileValidation", "NonExistentFileValidation", "SymbolicLinkValidation", "ConcurrentFileOperations"], "state": 2, "ctags": [], "filename": "/app/data/T0005/21095/Kavia-ai/filetrace/tests/test_file_monitoring.cpp", "hash": "33b9b7b5253f49c8ff4e2b532a183828", "format-version": 3, "code-base-name": "b4010c4"}