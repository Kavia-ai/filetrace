{"is_source_file": true, "format": "C++", "description": "Main file for a thread-aware file access visualizer application that uses ptrace for monitoring process/thread interactions and file operations.", "external_files": ["path_utils.hpp", "directory_tree.hpp", "html_generator.hpp", "logger.hpp", "cxxopts.hpp"], "external_methods": [], "published": ["main", "get_thread_name", "handle_thread_creation", "handle_thread_exit", "resolve_fd_path", "resolve_relative_path", "read_process_string", "handle_syscall_entry", "generate_html_output", "validate_output_file", "validate_command", "display_help"], "classes": [{"name": "ProcessType", "description": "Enumeration to distinguish between process and thread types."}, {"name": "ThreadInfo", "description": "Structure to store information about threads, including ID, parent ID, name, active status, and child processes/threads."}, {"name": "FileOperation", "description": "Structure to describe file operations, including thread info and operation details."}], "methods": [{"name": "main", "description": "The entry point for the application that parses command line arguments and initializes the file trace."}, {"name": "get_thread_name", "description": "Retrieves the name of a thread given its ID."}, {"name": "handle_thread_creation", "description": "Handles the creation of a new thread or process, updating the global thread tracking map."}, {"name": "handle_thread_exit", "description": "Handles the cleanup and processing of a thread's exit, managing child relationships."}, {"name": "resolve_fd_path", "description": "Resolves a file descriptor path given a process ID and file descriptor number."}, {"name": "resolve_relative_path", "description": "Resolves a relative file path using a base path."}, {"name": "read_process_string", "description": "Reads a string from a process's memory space, given a process ID and address."}, {"name": "handle_syscall_entry", "description": "Handles insights on system call entries for tracing file operations."}, {"name": "generate_html_output", "description": "Generates an HTML report from the file operations tracked during execution."}, {"name": "validate_output_file", "description": "Validates the output file path for directory existence and write permissions."}, {"name": "validate_command", "description": "Checks if the provided command is executable and in the environment's PATH."}, {"name": "display_help", "description": "Displays help information and usage examples for the application."}], "calls": ["ptrace", "kill", "stat", "execvp", "waitpid", "readlink", "getline", "std::ifstream::good", "std::getline"], "search-terms": ["thread tracking", "file operation tracing", "filetrace", "ptrace-based monitoring", "HTML output generation"], "state": 2, "ctags": [], "filename": "/app/data/T0005/21095/Kavia-ai/filetrace/src/main.cpp", "hash": "88b1a821185433b42c2218fbe77cdc08", "format-version": 3, "code-base-name": "b4010c4"}