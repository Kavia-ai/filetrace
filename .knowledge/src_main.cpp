{"is_source_file": true, "format": "C++", "description": "This is a C++ source file implementing a process tracing tool that monitors file operations and thread/process creation/termination using ptrace. It includes functions for handling system calls, thread management, file path resolution, and HTML report generation.", "external_files": ["path_utils.hpp", "directory_tree.hpp", "html_generator.hpp", "logger.hpp"], "external_methods": ["path_utils::normalize_path", "path_utils::is_within_directory", "path_utils::get_current_directory", "HtmlGenerator::generate_html_report", "HtmlGenerator::get_last_error", "Logger::debug", "Logger::error", "Logger::warning", "Logger::info"], "published": ["main"], "classes": [{"name": "ProcessType", "description": "Enum class to distinguish between process and thread types."}, {"name": "ThreadInfo", "description": "Structure to store information about a thread or process, including IDs, name, activity status, parent, children, creation time, and exit status."}, {"name": "FileOperation", "description": "Structure to store details of a file operation, including process ID, file path, sequence number, thread ID, thread name, and whether it was an actual open."}], "methods": [{"name": "get_thread_name", "description": "Retrieves the thread name from /proc/<tid>/comm."}, {"name": "handle_thread_creation", "description": "Handles creation of a new thread or process, updating thread map and parent-child relationships."}, {"name": "handle_thread_exit", "description": "Handles cleanup when a thread or process exits, updating thread map and detaching ptrace."}, {"name": "resolve_fd_path", "description": "Resolves the file descriptor path for a given process and fd."}, {"name": "resolve_relative_path", "description": "Resolves relative paths based on a base directory."}, {"name": "read_process_string", "description": "Safely reads a null-terminated string from a process's memory using ptrace."}, {"name": "handle_syscall_entry", "description": "Handles system call entry events, including clone/fork, exit, and file open/execve syscalls."}, {"name": "generate_html_output", "description": "Generates an HTML report based on collected file operations."}, {"name": "validate_output_file", "description": "Validates that the output file path is writable and valid."}, {"name": "validate_command", "description": "Checks if the command exists and is executable, either directly or in PATH."}, {"name": "display_help", "description": "Displays help message with usage examples."}], "calls": ["ptrace(PTRACE_DETACH, ...)", "ptrace(PTRACE_PEEKDATA, ...)", "ptrace(PTRACE_GETREGS, ...)", "ptrace(PTRACE_SYSCALL, ...)", "ptrace(PTRACE_SETOPTIONS, ...)", "kill(...)", "waitpid(...)", "execvp(...)", "raise(SIGSTOP)", "kill(...)", "std::filesystem::exists", "std::filesystem::is_directory", "std::filesystem::status", "access(...)", "getenv(...)", "kill(...)", "std::remove(...)", "std::remove_if(...)", "HtmlGenerator::generate_html_report", "Logger::debug", "Logger::error", "Logger::warning", "Logger::info"], "search-terms": ["ptrace", "thread management", "file system monitoring", "system call interception", "process tracing", "HTML report generation", "file descriptor resolution", "clone/fork handling", "thread info tracking", "file operation logging"], "state": 2, "file_id": 3, "knowledge_revision": 23, "git_revision": "06eb75e40164864b88d77b971a4a95be232768ca", "ctags": [], "filename": "src/main.cpp", "hash": "88b1a821185433b42c2218fbe77cdc08", "format-version": 4, "code-base-name": "https://github.com/Kavia-ai/filetrace.git:main", "revision_history": [{"23": "06eb75e40164864b88d77b971a4a95be232768ca"}]}