{"is_source_file": true, "format": "C++", "description": "This file contains unit tests for a Logger class, verifying logging levels, message routing, thread safety, message formatting, timestamp correctness, and macro behavior using Google Test and Google Mock frameworks.", "external_files": ["../src/logger.hpp", "<gtest/gtest.h>", "<gmock/gmock.h>", "<thread>", "<vector>", "<regex>", "<sstream>"], "external_methods": ["Logger::trace", "Logger::debug", "Logger::info", "Logger::warning", "Logger::error", "Logger::level_to_string"], "published": ["Logger"], "classes": [{"name": "LoggerTest", "description": "Test fixture class for testing Logger functionalities, setting up output redirection, and providing helper methods for output normalization."}], "methods": [{"name": "void SetUp()", "description": "Initial setup for tests, redirecting std::cout and std::cerr to stringstreams.", "scope": "LoggerTest", "scopeKind": "class"}, {"name": "void TearDown()", "description": "Restores original stdout and stderr buffers after tests.", "scope": "LoggerTest", "scopeKind": "class"}, {"name": "std::string getNormalizedOutput(const std::string & output)", "description": "Removes timestamp details from output strings to normalize variable timestamp data for assertions.", "scope": "LoggerTest", "scopeKind": "class"}, {"name": "TEST_F(LoggerTest,DebugLoggingMacro)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(LoggerTest,EmptyMessage)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(LoggerTest,LargeMessage)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(LoggerTest,LevelToString)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(LoggerTest,MessageFormatting)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(LoggerTest,SeverityLevelsAndRouting)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(LoggerTest,ThreadSafety)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(LoggerTest,TimestampFormat)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__anon5212a66e0102()", "scope": "TEST_F", "scopeKind": "function", "description": "unavailable"}], "calls": ["Logger::trace", "Logger::debug", "Logger::info", "Logger::warning", "Logger::error", "Logger::level_to_string", "std::cout.rdbuf", "std::cerr.rdbuf", "std::regex_replace", "std::regex", "output.find"], "search-terms": ["Logger", "LoggerTest", "unit tests", "Google Test", "thread safety tests", "message formatting", "timestamp normalization", "logging levels", "unit test fixture"], "state": 2, "file_id": 17, "knowledge_revision": 47, "git_revision": "06eb75e40164864b88d77b971a4a95be232768ca", "ctags": [{"_type": "tag", "name": "LoggerTest", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^class LoggerTest : public ::testing::Test {$/", "file": true, "language": "C++", "kind": "class"}, {"_type": "tag", "name": "SetUp", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^    void SetUp() override {$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "LoggerTest", "scopeKind": "class"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^TEST_F(LoggerTest, DebugLoggingMacro) {$/", "language": "C++", "kind": "function", "signature": "(LoggerTest,DebugLoggingMacro)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^TEST_F(LoggerTest, EmptyMessage) {$/", "language": "C++", "kind": "function", "signature": "(LoggerTest,EmptyMessage)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^TEST_F(LoggerTest, LargeMessage) {$/", "language": "C++", "kind": "function", "signature": "(LoggerTest,LargeMessage)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^TEST_F(LoggerTest, LevelToString) {$/", "language": "C++", "kind": "function", "signature": "(LoggerTest,LevelToString)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^TEST_F(LoggerTest, MessageFormatting) {$/", "language": "C++", "kind": "function", "signature": "(LoggerTest,MessageFormatting)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^TEST_F(LoggerTest, SeverityLevelsAndRouting) {$/", "language": "C++", "kind": "function", "signature": "(LoggerTest,SeverityLevelsAndRouting)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^TEST_F(LoggerTest, ThreadSafety) {$/", "language": "C++", "kind": "function", "signature": "(LoggerTest,ThreadSafety)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^TEST_F(LoggerTest, TimestampFormat) {$/", "language": "C++", "kind": "function", "signature": "(LoggerTest,TimestampFormat)"}, {"_type": "tag", "name": "TearDown", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^    void TearDown() override {$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "LoggerTest", "scopeKind": "class"}, {"_type": "tag", "name": "__anon5212a66e0102", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^        threads.emplace_back([i, messages_per_thread]() {$/", "file": true, "language": "C++", "kind": "function", "signature": "() ", "scope": "TEST_F", "scopeKind": "function"}, {"_type": "tag", "name": "cerr_buffer", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^    std::stringstream cerr_buffer;$/", "file": true, "language": "C++", "typeref": "typename:std::stringstream", "kind": "member", "scope": "LoggerTest", "scopeKind": "class"}, {"_type": "tag", "name": "cout_buffer", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^    std::stringstream cout_buffer;$/", "file": true, "language": "C++", "typeref": "typename:std::stringstream", "kind": "member", "scope": "LoggerTest", "scopeKind": "class"}, {"_type": "tag", "name": "getNormalizedOutput", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^    std::string getNormalizedOutput(const std::string& output) {$/", "file": true, "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const std::string & output)", "scope": "LoggerTest", "scopeKind": "class"}, {"_type": "tag", "name": "old_cerr", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^    std::streambuf* old_cerr;$/", "file": true, "language": "C++", "typeref": "typename:std::streambuf *", "kind": "member", "scope": "LoggerTest", "scopeKind": "class"}, {"_type": "tag", "name": "old_cout", "path": "/home/kavia/workspace/cmb095212e/filetrace/tests/test_logger.cpp", "pattern": "/^    std::streambuf* old_cout;$/", "file": true, "language": "C++", "typeref": "typename:std::streambuf *", "kind": "member", "scope": "LoggerTest", "scopeKind": "class"}], "hash": "7ed86355abaf639308aa6a72b72dcd05", "format-version": 4, "code-base-name": "filetrace", "filename": "tests/test_logger.cpp", "fields": [{"name": "std::stringstream cerr_buffer", "scope": "LoggerTest", "scopeKind": "class", "description": "unavailable"}, {"name": "std::stringstream cout_buffer", "scope": "LoggerTest", "scopeKind": "class", "description": "unavailable"}, {"name": "std::streambuf * old_cerr", "scope": "LoggerTest", "scopeKind": "class", "description": "unavailable"}, {"name": "std::streambuf * old_cout", "scope": "LoggerTest", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"47": "06eb75e40164864b88d77b971a4a95be232768ca"}]}