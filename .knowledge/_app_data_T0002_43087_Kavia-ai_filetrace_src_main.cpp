{"is_source_file": true, "format": "C++", "description": "Main implementation file for file tracing application that monitors and visualizes file access in processes and threads.", "external_files": ["path_utils.hpp", "directory_tree.hpp", "html_generator.hpp", "logger.hpp"], "external_methods": ["Logger::debug", "Logger::error", "Logger::info", "HtmlGenerator::generate_html_report", "path_utils::normalize_path", "path_utils::is_within_directory", "path_utils::get_current_directory"], "published": ["main", "generate_html_output", "validate_output_file", "validate_command", "handle_syscall_entry", "resolve_fd_path", "resolve_relative_path"], "classes": [{"name": "ThreadInfo", "description": "Structure that stores information about a thread, including its ID, parent ID, name, and status."}, {"name": "FileOperation", "description": "Structure that keeps track of file operation details, including process ID, path, and whether the operation was an actual open."}, {"name": "ProcessType", "description": "Enum that distinguishes between processes and threads."}], "methods": [{"name": "main", "description": "Entry point of the file tracing application, which sets up options, manages command execution, and handles file tracing."}, {"name": "generate_html_output", "description": "Generates an HTML report based on the collected file operations."}, {"name": "validate_output_file", "description": "Checks if the specified output file path is valid and writable."}, {"name": "validate_command", "description": "Validates the command to be executed, ensuring it is executable."}, {"name": "handle_syscall_entry", "description": "Handles system call entries, tracking file operations and managing thread creation."}, {"name": "resolve_fd_path", "description": "Resolves the file descriptor path for a given process."}, {"name": "resolve_relative_path", "description": "Resolves a relative file path based on a base directory."}], "calls": ["ptrace(PTRACE_TRACEME, 0, nullptr, nullptr)", "execvp(args[0], args.data())", "waitpid(child, &status, 0)", "ptrace(PTRACE_SYSCALL, waited_pid, nullptr, nullptr)", "kill(child, 0)"], "search-terms": ["filetrace", "thread monitoring", "file operation tracking", "HTML report generation"], "state": 2, "ctags": [], "filename": "/app/data/T0002/43087/Kavia-ai/filetrace/src/main.cpp", "hash": "88b1a821185433b42c2218fbe77cdc08", "format-version": 3, "code-base-name": "b0134v6"}