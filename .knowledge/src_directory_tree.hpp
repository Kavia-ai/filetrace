{"is_source_file": true, "format": "C++ header (hpp)", "description": "This file defines classes for representing and managing a directory tree structure, including insertion of files, and generating HTML visualization of the directory hierarchy. It utilizes path utilities, manages nodes with metadata, supports recursive HTML generation, and handles file and directory differentiation.", "external_files": ["path_utils.hpp"], "external_methods": [], "published": ["DirectoryTree", "DirectoryNode", "insert_file", "generate_html"], "classes": [{"name": "DirectoryNode", "description": "Represents a node in the directory tree, could be a file or a directory, with associated metadata such as path, sequence number, thread info, and children."}, {"name": "DirectoryTree", "description": "Manages the root of the directory hierarchy and provides methods to insert files and generate an HTML representation of the directory structure."}], "methods": [{"name": "void insert_file(const std::string & path,int sequence,pid_t thread_id,const std::string & thread_name)", "description": "Inserts a file into the directory tree, creating intermediate nodes as necessary, and updates metadata such as sequence number, thread ID, and thread name.", "scope": "DirectoryTree", "scopeKind": "class"}, {"name": "void generate_html(std::ostream & out) const", "description": "Outputs the directory tree as an HTML structure for visualization.", "scope": "DirectoryTree", "scopeKind": "class"}, {"name": "DirectoryNode(const std::string & n,const std::string & path,bool file=false)", "scope": "DirectoryNode", "scopeKind": "class", "description": "unavailable"}, {"name": "DirectoryTree()", "scope": "DirectoryTree", "scopeKind": "class", "description": "unavailable"}, {"name": "__anond91edaed0102(const auto& a, const auto& b)", "scope": "DirectoryTree::generate_html_node", "scopeKind": "function", "description": "unavailable"}, {"name": "void generate_html_node(const std::shared_ptr<DirectoryNode> & node,std::ostream & out,int depth) const", "scope": "DirectoryTree", "scopeKind": "class", "description": "unavailable"}], "calls": ["path_utils::normalize_path", "std::filesystem::path::operator/", "std::sort"], "search-terms": ["DirectoryTree", "DirectoryNode", "insert_file", "generate_html", "directory hierarchy", "HTML generation", "path normalization"], "state": 2, "file_id": 15, "knowledge_revision": 42, "git_revision": "06eb75e40164864b88d77b971a4a95be232768ca", "ctags": [{"_type": "tag", "name": "DIRECTORY_TREE_HPP", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^#define DIRECTORY_TREE_HPP$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "DirectoryNode", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    DirectoryNode(const std::string& n, const std::string& path, bool file = false)$/", "language": "C++", "kind": "function", "signature": "(const std::string & n,const std::string & path,bool file=false)", "scope": "DirectoryNode", "scopeKind": "class"}, {"_type": "tag", "name": "DirectoryNode", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^class DirectoryNode {$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "DirectoryTree", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    DirectoryTree() : root(std::make_shared<DirectoryNode>(\"\\/\", \"\\/\", false)) {}$/", "language": "C++", "kind": "function", "signature": "()", "scope": "DirectoryTree", "scopeKind": "class"}, {"_type": "tag", "name": "DirectoryTree", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^class DirectoryTree {$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "__anond91edaed0102", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^                [](const auto& a, const auto& b) {$/", "file": true, "language": "C++", "kind": "function", "signature": "(const auto& a, const auto& b) ", "scope": "DirectoryTree::generate_html_node", "scopeKind": "function"}, {"_type": "tag", "name": "children", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    std::map<std::string, std::shared_ptr<DirectoryNode>> children;$/", "language": "C++", "typeref": "typename:std::map<std::string,std::shared_ptr<DirectoryNode>>", "kind": "member", "scope": "DirectoryNode", "scopeKind": "class"}, {"_type": "tag", "name": "fileSvg", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^const std::string fileSvg = \"<svg class='svg-icon' viewBox='0 0 20 20'><path d='M13 2H6C4.9 2 4 /", "language": "C++", "typeref": "typename:const std::string", "kind": "variable"}, {"_type": "tag", "name": "folderSvg", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^const std::string folderSvg = \"<svg class='svg-icon' viewBox='0 0 20 20'><path d='M2 4c0-1.1.9-2/", "language": "C++", "typeref": "typename:const std::string", "kind": "variable"}, {"_type": "tag", "name": "full_path", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    std::string full_path;$/", "language": "C++", "typeref": "typename:std::string", "kind": "member", "scope": "DirectoryNode", "scopeKind": "class"}, {"_type": "tag", "name": "generate_html", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    void generate_html(std::ostream& out) const {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(std::ostream & out) const", "scope": "DirectoryTree", "scopeKind": "class"}, {"_type": "tag", "name": "generate_html_node", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    void generate_html_node(const std::shared_ptr<DirectoryNode>& node, std::ostream& out, int d/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const std::shared_ptr<DirectoryNode> & node,std::ostream & out,int depth) const", "scope": "DirectoryTree", "scopeKind": "class"}, {"_type": "tag", "name": "insert_file", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    void insert_file(const std::string& path, int sequence, pid_t thread_id, const std::string& /", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const std::string & path,int sequence,pid_t thread_id,const std::string & thread_name)", "scope": "DirectoryTree", "scopeKind": "class"}, {"_type": "tag", "name": "is_file", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    bool is_file;$/", "language": "C++", "typeref": "typename:bool", "kind": "member", "scope": "DirectoryNode", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    std::string name;$/", "language": "C++", "typeref": "typename:std::string", "kind": "member", "scope": "DirectoryNode", "scopeKind": "class"}, {"_type": "tag", "name": "root", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    std::shared_ptr<DirectoryNode> root;$/", "language": "C++", "typeref": "typename:std::shared_ptr<DirectoryNode>", "kind": "member", "scope": "DirectoryTree", "scopeKind": "class"}, {"_type": "tag", "name": "sequence_number", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    int sequence_number;$/", "language": "C++", "typeref": "typename:int", "kind": "member", "scope": "DirectoryNode", "scopeKind": "class"}, {"_type": "tag", "name": "thread_id", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    pid_t thread_id;$/", "language": "C++", "typeref": "typename:pid_t", "kind": "member", "scope": "DirectoryNode", "scopeKind": "class"}, {"_type": "tag", "name": "thread_name", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/directory_tree.hpp", "pattern": "/^    std::string thread_name;$/", "language": "C++", "typeref": "typename:std::string", "kind": "member", "scope": "DirectoryNode", "scopeKind": "class"}], "hash": "64104db6a612846a9e871b9e55623766", "format-version": 4, "code-base-name": "filetrace", "filename": "src/directory_tree.hpp", "fields": [{"name": "std::map<std::string,std::shared_ptr<DirectoryNode>> children", "scope": "DirectoryNode", "scopeKind": "class", "description": "unavailable"}, {"name": "const std::string fileSvg", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const std::string folderSvg", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "std::string full_path", "scope": "DirectoryNode", "scopeKind": "class", "description": "unavailable"}, {"name": "bool is_file", "scope": "DirectoryNode", "scopeKind": "class", "description": "unavailable"}, {"name": "std::string name", "scope": "DirectoryNode", "scopeKind": "class", "description": "unavailable"}, {"name": "std::shared_ptr<DirectoryNode> root", "scope": "DirectoryTree", "scopeKind": "class", "description": "unavailable"}, {"name": "int sequence_number", "scope": "DirectoryNode", "scopeKind": "class", "description": "unavailable"}, {"name": "pid_t thread_id", "scope": "DirectoryNode", "scopeKind": "class", "description": "unavailable"}, {"name": "std::string thread_name", "scope": "DirectoryNode", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"42": "06eb75e40164864b88d77b971a4a95be232768ca"}]}