{"is_source_file": true, "format": "C++ header file", "description": "This file defines a Logger class for structured logging with multiple severity levels, timestamping, and thread safety mechanisms.", "external_files": ["<iostream>", "<sstream>", "<string>", "<mutex>", "<chrono>", "<iomanip>"], "external_methods": [], "published": ["Logger"], "classes": [{"name": "Logger", "description": "A class providing static methods for logging messages at various severity levels, with timestamp and thread safety."}], "methods": [{"name": "const char * level_to_string(Level level)", "description": "Converts a log level enum to its string representation.", "scope": "Logger", "scopeKind": "class"}, {"name": "void debug(Args...args)", "description": "Logs a debug message if DEBUG_LOGGING is enabled.", "scope": "Logger", "scopeKind": "class"}, {"name": "void trace(Args...args)", "description": "Logs a trace message if DEBUG_LOGGING is enabled.", "scope": "Logger", "scopeKind": "class"}, {"name": "void info(Args...args)", "description": "Logs an informational message.", "scope": "Logger", "scopeKind": "class"}, {"name": "void warning(Args...args)", "description": "Logs a warning message.", "scope": "Logger", "scopeKind": "class"}, {"name": "void error(Args...args)", "description": "Logs an error message.", "scope": "Logger", "scopeKind": "class"}, {"name": "std::string get_timestamp()", "description": "Retrieves the current timestamp formatted as a string.", "scope": "Logger", "scopeKind": "class"}, {"name": "void append_to_stream(std::stringstream & ss,T && arg)", "description": "Helper function to append arguments to stringstream.", "scope": "Logger", "scopeKind": "class"}, {"name": "void log(Level level,Args &&...args)", "description": "Main function that formats and outputs the log message based on log level.", "scope": "Logger", "scopeKind": "class"}, {"name": "void append_to_stream(std::stringstream & ss,T && arg,Args &&...args)", "scope": "Logger", "scopeKind": "class", "description": "unavailable"}], "calls": ["Logger::log"], "search-terms": ["Logger", "logging", "timestamp", "thread safety", "log levels", "mutex"], "state": 2, "file_id": 14, "knowledge_revision": 44, "git_revision": "06eb75e40164864b88d77b971a4a95be232768ca", "ctags": [{"_type": "tag", "name": "DEBUG", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^        DEBUG = 1,$/", "language": "C++", "kind": "enumerator", "scope": "Logger::Level", "scopeKind": "enum"}, {"_type": "tag", "name": "DEBUG_LOGGING", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^#define DEBUG_LOGGING /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "ERROR", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^        ERROR = 4$/", "language": "C++", "kind": "enumerator", "scope": "Logger::Level", "scopeKind": "enum"}, {"_type": "tag", "name": "INFO", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^        INFO = 2,$/", "language": "C++", "kind": "enumerator", "scope": "Logger::Level", "scopeKind": "enum"}, {"_type": "tag", "name": "Level", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    enum class Level : uint8_t {$/", "language": "C++", "typeref": "typename:uint8_t", "kind": "enum", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "Logger", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^class Logger {$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "TRACE", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^        TRACE = 0,$/", "language": "C++", "kind": "enumerator", "scope": "Logger::Level", "scopeKind": "enum"}, {"_type": "tag", "name": "WARNING", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^        WARNING = 3,$/", "language": "C++", "kind": "enumerator", "scope": "Logger::Level", "scopeKind": "enum"}, {"_type": "tag", "name": "append_to_stream", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static void append_to_stream(std::stringstream& ss, T&& arg) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(std::stringstream & ss,T && arg)", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "append_to_stream", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static void append_to_stream(std::stringstream& ss, T&& arg, Args&&... args) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(std::stringstream & ss,T && arg,Args &&...args)", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "debug", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static void debug(Args... args) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(Args...args)", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static void error(Args... args) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(Args...args)", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "get_timestamp", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static std::string get_timestamp() {$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "()", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "info", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static void info(Args... args) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(Args...args)", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "level_to_string", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static const char* level_to_string(Level level) {$/", "language": "C++", "typeref": "typename:const char *", "kind": "function", "signature": "(Level level)", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static void log(Level level, Args&&... args) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(Level level,Args &&...args)", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "log_mutex", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static inline std::mutex log_mutex;$/", "language": "C++", "typeref": "typename:std::mutex", "kind": "member", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "trace", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static void trace(Args... args) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(Args...args)", "scope": "Logger", "scopeKind": "class"}, {"_type": "tag", "name": "warning", "path": "/home/kavia/workspace/cmb095212e/filetrace/src/logger.hpp", "pattern": "/^    static void warning(Args... args) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(Args...args)", "scope": "Logger", "scopeKind": "class"}], "hash": "43a91df4dc9ad3afbe5d572c204e429c", "format-version": 4, "code-base-name": "filetrace", "filename": "src/logger.hpp", "fields": [{"name": "std::mutex log_mutex", "scope": "Logger", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"44": "06eb75e40164864b88d77b971a4a95be232768ca"}]}